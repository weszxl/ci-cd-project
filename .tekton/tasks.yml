---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cleanup
spec:
  description: task to clean up workspace
  workspaces:
    - name: source
  steps:
    - name: remove
      image: alpine:3
      env:
        - name: WORKSPACE_SOURCE_PATH
          value: $(workspaces.source.path)
      workingDir: $(workspaces.source.path)
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      script: |
        #!/usr/bin/env sh
        set -eu
        echo "Removing all files from $(WORKSPACE_SOURCE_PATH) ..."
        #Delete any existing contents of the directory if it exists.
        #
        #We don't just "rm -rf $(WORKSPACE_SOURCE_PATH}" because $(WORKSPACE_SOURCE_PATH) might be "/"
        #or the root of a mounted volume.
        if [ -d "$(WORKSPACE_SOURCE_PATH)" ]; then
          #Delete non-hidden files and directories
          rm -rf "${WORKSPACE_SOURCE_PATH:?}"/*
          #Delete files and directories starting with but excluding . and ..
          rm -rf "${WORKSPACE_SOURCE_PATH}"/.[^.]*
          # Delete files and directories starting with .. plus any other character
          rm -rf "${WORKSPACE_SOURCE_PATH}"/..[^\.]*
        fi

---
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: nose
spec:
  workspaces:
    - name: source
  params:
    - name: args
      description: pass to nose
      type: string
      default: "-v"
  steps:
    - name: nosetests
      image: python:3.9-slim
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        set -e
        python -m pip install --upgrade pip wheel
        pip install -r requirements.txt
        nosetests $(params.args)

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: flake8-linting
spec:
  workspaces:
    - name: source
  steps:
    - name: flake8
      image: python:3.9-slim  # Ou uma imagem com o flake8 pré-instalado
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        set -e

        # Cria e ativa um ambiente virtual
        python3 -m venv .venv
        source .venv/bin/activate

        # Atualiza o pip dentro do ambiente virtual
        python -m pip install --upgrade pip

        # Instala o flake8
        pip install flake8

        # Executa o flake8 (corrija as linhas longas no seu código!)
        flake8 .  # Ou flake8 . --ignore=E501 se precisar ignorar temporariamente

        # Desativa o ambiente virtual (boa prática)
        deactivate
